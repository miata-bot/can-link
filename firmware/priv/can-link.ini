;-------------------------------------------------------------------------------
#unset CAN_COMMANDS
#unset enablehardware_test
#set NEW_COMMS

[MegaTune]
   MTversion      = 2.25

   queryCommand   = "Q"
   signature      = "can-link 202204-dev"
   versionInfo    = "S" ;This info is what is displayed to user

[TunerStudio]
   iniSpecVersion = 3.64

;-------------------------------------------------------------------------------

[SettingGroups]
  ; the referenceName will over-ride previous, so if you are creating a
  ; settingGroup with a reference name of lambdaSensor, it will replace the
  ; setting group defined in the settingGroups.xml of the TunerStudio config
  ; folder. If is is an undefined referenceName, it will be added.
  ; keyword    =  referenceName,  DisplayName

[PcVariables]
   ; valid types: boolean, double, int, list
   ;
   ; no offset as they are local variables.
   ; entry format the same as Constants, except there is no offset.
   ; arrays are not yet supported.
   ; name = class,  type,    shape,  units,       scale, translate,    lo,      hi, digits
   ; name = type, min, max;
   ;
   ; type List: value will be index.

[Constants]
   ;----------------------------------------------------------------------------
   ; Constants Definition
   ; --------------------
   ;
   ; Scalar Values
   ; -------------
   ; The scaling and translation values are used as follows:
   ;    msValue   = userValue / scale - translate
   ;    userValue = (msValue + translate) * scale
   ;
   ;
   ; Temperatures are fine, check out the Fielding IAC example (fastIdleT).
   ;
   ; Array Values
   ; ------------
   ; Arrays are specified just like scalars, except that they have a "shape"
   ; entry in the fourth parameter.  The shape allows you to define lists or
   ; tables, for example [8] defines a list with eight values and [2x4] defines
   ; a table with eight values (two rows and four columns).  Tables may be
   ; stored in either "X-" or "Y-order."  X-order means that memory is layed
   ; out like.
   ;
   ;     [x1,y1] [x2,y1]...[xn,y1] [x1,y2]...
   ;
   ; Y-order would be
   ;
   ;     [x1,y1] [x1,y2]...[x1,yn] [x2,y1]...
   ;
   ; To use the TableEditor, you must define two lists and a table, and
   ; the lengths of the lists must correspond to the shape of the table.
   ;
   ; Bit Fields
   ; ----------
   ; Bits are numbered 0-7, the rightmost being bit zero.  The basic
   ; data word that stores bit fields must be unsigned.
   ;
   ; You need NOT supply the correct number of labels matching the
   ; number of bits you've specified (one bit requires 2 values, two
   ; bits requires 4 values and so on).  If you neglect to supply enough
   ; labels, they will be synthesized using the sequence "1", "2" and so
   ; on based upon their position in the sequence (the cltType and matType
   ; will end up with identical lists).
   ;
   ; If you specify a label as "INVALID" (all upper case), then it will
   ; not be displayed in the combo box, so you can leave out values that
   ; make no sense.
   ;
   ;----------------------------------------------------------------------------

    endianness          = little
    nPages              = 1
    pageSize            = 128

    ; New commands
    pageIdentifier      = "\$tsCanId\x01"
    burnCommand         = "b%2i"
    pageReadCommand     = "p%2i%2o%2c"
    pageValueWrite      = "M%2i%2o%2c%v"
    pageChunkWrite      = "M%2i%2o%2c%v"
    crc32CheckCommand   = "d%2i"

;--------------------------------------------------
;Start Page 1
;Page 1 is all general settings. Note that some of these (algorithm and ignAlgorithm) MUST come before their use in the bitStringValue() calls in the fuel and ignition tables
;--------------------------------------------------
page = 1

[EventTriggers]

[ConstantsExtensions]

[Menu]

   ;----------------------------------------------------------------------------
   ;  There are five pre-defined values that may be used to define your menus.
   ;  The first four allow access to the "standard" dialog boxes, the last one
   ;  merely draws a separator (horizontal line) in the menu.
   ;
   ;     std_constants
   ;     std_enrichments
   ;     std_realtime
   ;     std_warmup
   ;
   ;     std_separator
   ;
   ;  If you use any of the std_constants, std_enrichments or std_warmup
   ;  editors, they may be optionally suffixed with a page number (only
   ;  useful for multi-page code variants), which causes them to edit the
   ;  specified page.  If you leave off the page specifier, they edit logical
   ;  page one as specified in the Constants section.
   ;
   ;  There are four special menu names, which when used append to the standard
   ;  menus of the same name instead of creating a new one.  The menu names
   ;  are "File", "Communications", "Tools" and "Help".
   ;
   ;----------------------------------------------------------------------------

menuDialog = main

   menu = "Settings"

   menu = "&Tuning"

[SettingContextHelp]

[UserDefined]

[CurveEditor]

[TableEditor]

[GaugeConfigurations]

[FrontPage]

[OutputChannels]
   ; The number of bytes MegaTune or TunerStudio should expect as a result
   ; of sending the "A" command to Speeduino is determined
   ; by the value of ochBlockSize, so be very careful when
   ; you change it.

   ochGetCommand    = "r\$tsCanId\x30%2o%2c"
   ochBlockSize     =  122
   secl             = scalar, U08,  0, "sec",    1.000, 0.000

[Datalog]
   ; Full datalog.
   ;
   ; Default user-defined log emulates the full datalog.
   ;
   ; The entries are saved in the datalog file in the order in
   ; which they appear in the list below.
   ;
   ;   Channel - Case sensitive name of output channel to be logged.
   ;   Label   - String written to header line of log.  Be careful
   ;             about changing these, as programs like MSLVV and
   ;             MSTweak key off specific column names.
   ;   Type    - Data type of output, converted before writing.
   ;   Format  - C-style output format of data.
   ;
   ;       Channel          Label               Type    Format
   ;       --------------   ----------          -----   ------
   entry = time,            "Time",             float,  "%.3f"


