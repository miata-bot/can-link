name: build

on:
  push:
    #

jobs:
  win32-x86-debug:
    runs-on: windows-latest
    defaults:
      run:
        shell: powershell
        working-directory: interface\provisioner
    steps:
      - uses: microsoft/setup-msbuild@v1.1

      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Fetch SDL
        run: |
          Invoke-WebRequest -Uri 'https://github.com/libsdl-org/SDL/releases/download/release-2.24.2/SDL2-devel-2.24.2-VC.zip' -OutFile 'SDL2-devel-2.24.2-VC.zip'
          Expand-Archive -Path 'SDL2-devel-2.24.2-VC.zip' -DestinationPath 'lib/sdl'

      - name: Fetch SQLite
        run: |
          Invoke-WebRequest -Uri 'https://www.sqlite.org/2022/sqlite-amalgamation-3390400.zip' -OutFile 'sqlite-amalgamation-3390400.zip'
          Expand-Archive -Path 'sqlite-amalgamation-3390400.zip' -DestinationPath 'lib/sqlite/'
        
      - name: Build ConeRGB Configurator Debug
        run: msbuild provisioner.sln /p:Configuration="Debug" /p:PlatformTarget=x86 /p:Platform=x86

      - uses: actions/upload-artifact@v3
        with:
          name: ConeRGB-Win32-Debug
          path: |
            interface\provisioner\Debug\provisioner.exe
            interface\provisioner\Debug\README.txt
            interface\provisioner\Debug\LICENSE
            interface\provisioner\Debug\SDL2.dll
            interface\provisioner\Debug\README-SDL.txt
            interface\provisioner\Debug\imgui.ini
            interface\provisioner\Debug\config.db

  win32-x86-release:
    runs-on: windows-latest
    defaults:
      run:
        shell: powershell
        working-directory: interface\provisioner
    steps:
      - uses: microsoft/setup-msbuild@v1.1

      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Fetch SDL
        run: |
          Invoke-WebRequest -Uri 'https://github.com/libsdl-org/SDL/releases/download/release-2.24.2/SDL2-devel-2.24.2-VC.zip' -OutFile 'SDL2-devel-2.24.2-VC.zip'
          Expand-Archive -Path 'SDL2-devel-2.24.2-VC.zip' -DestinationPath 'lib/sdl'

      - name: Fetch SQLite
        run: |
          Invoke-WebRequest -Uri 'https://www.sqlite.org/2022/sqlite-amalgamation-3390400.zip' -OutFile 'sqlite-amalgamation-3390400.zip'
          Expand-Archive -Path 'sqlite-amalgamation-3390400.zip' -DestinationPath 'lib/sqlite/'

      - name: Build ConeRGB Configurator Release
        run: msbuild provisioner.sln /p:Configuration="Release" /p:PlatformTarget=x86 /p:Platform=x86

      - uses: actions/upload-artifact@v3
        with:
          name: ConeRGB-Win32-Release
          path: |
            interface\provisioner\Release\provisioner.exe
            interface\provisioner\Release\README.txt
            interface\provisioner\Release\LICENSE
            interface\provisioner\Release\SDL2.dll
            interface\provisioner\Release\README-SDL.txt
            interface\provisioner\Release\imgui.ini
            interface\provisioner\Release\config.db

  Emscripten:
    runs-on: ubuntu-18.04
    defaults:
      run:
        shell: bash
        working-directory: interface/provisioner
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Install Dependencies
        run: |
          wget -q https://github.com/emscripten-core/emsdk/archive/master.tar.gz
          tar -xvf master.tar.gz
          emsdk-master/emsdk update
          emsdk-master/emsdk install latest
          emsdk-master/emsdk activate latest
      - name: Build provisioner 
        run: |
          pushd emsdk-master
          source ./emsdk_env.sh
          popd
          make TARGET=emscripten
      - name: Archive artifact
        run: |
          tar \
            --dereference --hard-dereference \
            --directory web \
            -cvf /tmp/artifact.tar \
            --exclude=.git \
            --exclude=.github \
            .
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-pages
          path: /tmp/artifact.tar
          retention-days: 7

  deploy:
    # Add a dependency to the build job
    needs: Emscripten

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
